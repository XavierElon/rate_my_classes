{
	"info": {
		"_postman_id": "ff742f03-14b5-40e4-86e1-d746d2517899",
		"name": "ratemyclasses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add Institution",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6157284b-b301-4eca-9682-77c431fa88a0",
						"exec": [
							"pm.environment.set(\"institution_id\", pm.response.json()[\"_id\"]);",
							"",
							"pm.test(\"Institution posted, 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n\t\"name\": \"Oregon State Uavde\",\n\t\"website\": \"https://www.oregonstate.test234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/institutions/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions",
						""
					]
				},
				"description": "adds an institution"
			},
			"response": []
		},
		{
			"name": "get institutions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "adc5b848-387d-4f05-99aa-7dc8f5efb69e",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"100 results per page\", function(){",
							"   pm.expect(pm.response.json()[\"institutions\"].length).to.eq(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions"
					]
				}
			},
			"response": []
		},
		{
			"name": "get institutions second page",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "835fb477-ed25-4d57-9a86-713e4c6f9888",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"100 results per page\", function(){",
							"   pm.expect(pm.response.json()[\"institutions\"].length).to.eq(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions?page=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get filtered institutions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d3131d2-23dc-4a57-8e91-c68a3abf37e7",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"first name contains oregon\", function(){",
							"   pm.expect(pm.response.json()[0].name).to.contain('Oregon');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions?filter=Oregon",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions"
					],
					"query": [
						{
							"key": "filter",
							"value": "Oregon"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get institution by id - 400 bad char",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8525854e-5366-40eb-ac90-cd82ad97a638",
						"exec": [
							"pm.test(\"400 Invalid Id\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions/${{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions",
						"${{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get institution by id - 400 too long",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "777dd66b-bc38-4949-9629-a551e0eb6808",
						"exec": [
							"pm.test(\"400 Invalid Id\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions/1{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions",
						"1{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get institution by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f74789cc-1e42-4f61-9b21-c6d9052d4aac",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions/{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions",
						"{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add course",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef86168e-3e44-41a6-a012-d5716e1ae968",
						"exec": [
							"pm.environment.set(\"class_id\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"Course posted, 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"Databases 33\",\n\t\"courseID\": \"CS34033\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/courses/{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "571b4281-9129-4191-bd23-6740a2366de1",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/courses/{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete course",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a783a87-05a0-49c0-b31d-8c996f6377af",
						"exec": [
							"pm.test(\"Course deleted, 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/courses/{{class_id}}/{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"{{class_id}}",
						"{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete institution",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2bebde30-6ecc-49ca-94d4-993df124c188",
						"exec": [
							"pm.test(\"Institution deleted, 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/institutions/{{institution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"institutions",
						"{{institution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add review",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a046ae8-506f-4513-a52c-0a283bc269db",
						"exec": [
							"pm.environment.set(\"review_id\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"Review posted, 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"body\": \"hi223\",\n\t\"rating\": \"3\",\n\t\"difficulty\": \"4\",\n\t\"hoursPerWeek\": \"10\",\n\t\"professor\": \"Chaundry\",\n\t\"grade\": \"A\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/reviews/{{class_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{class_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get reviews",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e32d6713-f9e4-449f-975a-b77c62051ab4",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/reviews/{{class_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{class_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get review by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4f89652-fe16-43f8-b3aa-f72fd4df48f7",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/reviews/{{review_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{review_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get review by id - 500 bad char",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb1d128a-59e2-4a8f-8e47-713d7ee2f91c",
						"exec": [
							"pm.test(\"400 Invalid Id\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/reviews/{{bad_char_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{bad_char_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get review by id - 500 too long",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9470f16-475b-4a37-91c9-c53f909e2666",
						"exec": [
							"pm.test(\"400 Invalid Id\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/reviews/{{bad_id_long}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{bad_id_long}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete review",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f882613f-2dfc-4e03-9a63-08e7bdd40125",
						"exec": [
							"pm.test(\"Review deleted, 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/reviews/{{review_id}}/{{class_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"reviews",
						"{{review_id}}",
						"{{class_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticate 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "53b09311-dafa-49c1-92db-696c75ef2631",
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Invalid email msg\", function(){",
							"   pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Email is not valid\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"ratemyclassesmgr\",\n\t\"redirect\": \"http://foo.bar/page\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/auth",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticate success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7583d65-0df0-400a-bba1-8df33515254c",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"ratemyclassesmgr@gmail.com\",\n\t\"redirect\": \"http://foo.bar/page\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/auth",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"auth"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}